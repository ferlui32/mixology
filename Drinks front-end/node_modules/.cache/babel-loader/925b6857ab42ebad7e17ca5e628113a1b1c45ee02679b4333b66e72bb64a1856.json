{"ast":null,"code":"var _jsxFileName = \"/Users/luizferri/quests/drinks/Drinks front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport serviceApi from './services/Api';\nimport Footer from './components/Footer.js';\nimport DrinkCard from './components/DrinkCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    serviceApi.getAll().then(allDrinks => {\n      setDrinks(allDrinks); // Update the state with the fetched drinks\n      // console.log(allDrinks);\n    });\n  }, []); // Empty dependency array since it's a one-time fetch\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hello world\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), \"drinks.map\", /*#__PURE__*/_jsxDEV(DrinkCard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"67nNTMmDixDfilXJuCuQ5mdfVqg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","serviceApi","Footer","DrinkCard","jsxDEV","_jsxDEV","App","_s","drinks","setDrinks","getAll","then","allDrinks","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luizferri/quests/drinks/Drinks front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport serviceApi from './services/Api';\nimport Footer from './components/Footer.js';\nimport DrinkCard from './components/DrinkCard';\n\n\nconst App = () => {\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    serviceApi\n    .getAll()\n    .then(allDrinks => {\n      setDrinks(allDrinks); // Update the state with the fetched drinks\n      // console.log(allDrinks);\n    });\n  }, []); // Empty dependency array since it's a one-time fetch\n\n  return (\n    <div>\n      <p>Hello world</p>\n      drinks.map\n      <DrinkCard />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,UAAU,CACTS,MAAM,CAAC,CAAC,CACRC,IAAI,CAACC,SAAS,IAAI;MACjBH,SAAS,CAACG,SAAS,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,cAElB,eAAAZ,OAAA,CAACF,SAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbZ,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACV,EAAA,CApBID,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}