{"ast":null,"code":"var _jsxFileName = \"/Users/luizferri/quests/drinks/Drinks front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport serviceApi from './services/Api'; // Import your serviceApi\n\nimport Footer from './components/Footer';\nimport Drink from './components/DrinkCard';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [drinks, setDrinks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState(''); // New state for the search term\n  const drinksPerPage = 20;\n  const totalDrinks = 600; // Set the total number of drinks (if known)\n\n  const fetchDrinks = () => {\n    const offset = (currentPage - 1) * drinksPerPage;\n\n    // Use the serviceApi.searchDrinks function if a searchTerm is provided, otherwise, use serviceApi.getAll\n    const apiCall = searchTerm ? serviceApi.searchDrinks(searchTerm) : serviceApi.getAll({\n      limit: drinksPerPage,\n      offset\n    });\n    apiCall.then(response => {\n      const newDrinks = response.drinks || [];\n      setDrinks(newDrinks);\n    }).catch(error => {\n      console.error('Error fetching drinks:', error);\n      setDrinks([]);\n    });\n  };\n  useEffect(() => {\n    fetchDrinks();\n  }, [currentPage, searchTerm]); // Include currentPage and searchTerm in the dependency array\n\n  const handlePrevPage = () => {\n    setCurrentPage(prevPage => Math.max(prevPage - 1, 1));\n  };\n  const handleNextPage = () => {\n    setCurrentPage(prevPage => Math.min(prevPage + 1, Math.ceil(totalDrinks / drinksPerPage)));\n  };\n\n  // const handleSearch = () => {\n  //   // When the search term changes, fetch drinks with the new search term and reset to page 1\n  //   setCurrentPage(1);\n  //   fetchDrinks();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drinksPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter drink name\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drink-container\",\n      children: drinks.map((drink, index) => /*#__PURE__*/_jsxDEV(Drink, {\n        drink: true\n        // drinkName={drink.strDrink}\n        // image={drink.strDrinkThumb}\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevPage,\n        disabled: currentPage === 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        disabled: currentPage === Math.ceil(totalDrinks / drinksPerPage),\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y10t1QbwmXoaRjgiVmsE9KkoAiE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","serviceApi","Footer","Drink","jsxDEV","_jsxDEV","App","_s","drinks","setDrinks","currentPage","setCurrentPage","searchTerm","setSearchTerm","drinksPerPage","totalDrinks","fetchDrinks","offset","apiCall","searchDrinks","getAll","limit","then","response","newDrinks","catch","error","console","handlePrevPage","prevPage","Math","max","handleNextPage","min","ceil","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","drink","index","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/luizferri/quests/drinks/Drinks front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport serviceApi from './services/Api'; // Import your serviceApi\n\nimport Footer from './components/Footer';\nimport Drink from './components/DrinkCard';\n\nimport \"./App.css\"\n\nconst App = () => {\n  const [drinks, setDrinks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState(''); // New state for the search term\n  const drinksPerPage = 20;\n  const totalDrinks = 600; // Set the total number of drinks (if known)\n\n  const fetchDrinks = () => {\n    const offset = (currentPage - 1) * drinksPerPage;\n\n    // Use the serviceApi.searchDrinks function if a searchTerm is provided, otherwise, use serviceApi.getAll\n    const apiCall = searchTerm ? serviceApi.searchDrinks(searchTerm) : serviceApi.getAll({ limit: drinksPerPage, offset });\n\n    apiCall\n      .then((response) => {\n        const newDrinks = response.drinks || [];\n        setDrinks(newDrinks);\n      })\n      .catch((error) => {\n        console.error('Error fetching drinks:', error);\n        setDrinks([]);\n      });\n  };\n\n  useEffect(() => {\n    fetchDrinks();\n  }, [currentPage, searchTerm]); // Include currentPage and searchTerm in the dependency array\n\n  const handlePrevPage = () => {\n    setCurrentPage((prevPage) => Math.max(prevPage - 1, 1));\n  };\n\n  const handleNextPage = () => {\n    setCurrentPage((prevPage) => Math.min(prevPage + 1, Math.ceil(totalDrinks / drinksPerPage)));\n  };\n\n  // const handleSearch = () => {\n  //   // When the search term changes, fetch drinks with the new search term and reset to page 1\n  //   setCurrentPage(1);\n  //   fetchDrinks();\n  // };\n\n  return (\n    <div className='drinksPage'>\n      {/* Search input and button */}\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter drink name\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        {/* <button onClick={handleSearch}>Search</button> */}\n      </div>\n      <div className='drink-container'>\n        {drinks.map((drink, index) => (\n        <Drink \n          key={index}\n          drink\n          // drinkName={drink.strDrink}\n          // image={drink.strDrinkThumb}\n        />\n      ))}\n      </div>\n      \n      <div>\n        <button onClick={handlePrevPage} disabled={currentPage === 1}>\n          Previous Page\n        </button>\n        <button onClick={handleNextPage} disabled={currentPage === Math.ceil(totalDrinks / drinksPerPage)}>\n          Next Page\n        </button>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}