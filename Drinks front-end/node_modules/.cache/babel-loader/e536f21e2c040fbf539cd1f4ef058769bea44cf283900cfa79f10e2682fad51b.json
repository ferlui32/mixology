{"ast":null,"code":"var _jsxFileName = \"/Users/luizferri/quests/drinks/Drinks front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport serviceApi from './services/Api';\nimport Footer from './components/Footer.js';\nimport Drink from './components/DrinkCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [drinks, setDrinks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const drinksPerPage = 25;\n  const totalDrinks = 600; // Set the total number of drinks (if known)\n\n  useEffect(() => {\n    fetchDrinks();\n  }, []); // Fetch drinks on component mount\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [drinks]); // Add scroll event listener\n\n  const fetchDrinks = () => {\n    // Assuming your API supports pagination with 'limit' and 'offset' parameters\n    const offset = (currentPage - 1) * drinksPerPage;\n    serviceApi.getAll({\n      limit: drinksPerPage,\n      offset\n    }).then(response => {\n      const newDrinks = response.drinks;\n      setDrinks(prevDrinks => [...prevDrinks, ...newDrinks]); // Append new drinks to existing drinks\n    });\n  };\n\n  const handleScroll = () => {\n    // Load more drinks when user reaches the bottom of the page\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      if (drinks.length < totalDrinks) {\n        setCurrentPage(prevPage => prevPage + 1);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Drink, {\n      drinks: drinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FqMJVkJoum9HuolUG2oKOHWkFII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","serviceApi","Footer","Drink","jsxDEV","_jsxDEV","App","_s","drinks","setDrinks","currentPage","setCurrentPage","drinksPerPage","totalDrinks","fetchDrinks","window","addEventListener","handleScroll","removeEventListener","offset","getAll","limit","then","response","newDrinks","prevDrinks","innerHeight","document","documentElement","scrollTop","offsetHeight","length","prevPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luizferri/quests/drinks/Drinks front-end/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport serviceApi from './services/Api';\nimport Footer from './components/Footer.js';\nimport Drink from './components/DrinkCard';\n\nconst App = () => {\n  const [drinks, setDrinks] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const drinksPerPage = 25;\n  const totalDrinks = 600; // Set the total number of drinks (if known)\n\n  useEffect(() => {\n    fetchDrinks();\n  }, []); // Fetch drinks on component mount\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [drinks]); // Add scroll event listener\n\n  const fetchDrinks = () => {\n    // Assuming your API supports pagination with 'limit' and 'offset' parameters\n    const offset = (currentPage - 1) * drinksPerPage;\n    serviceApi.getAll({ limit: drinksPerPage, offset }).then((response) => {\n      const newDrinks = response.drinks;\n      setDrinks((prevDrinks) => [...prevDrinks, ...newDrinks]); // Append new drinks to existing drinks\n    });\n  };\n\n  const handleScroll = () => {\n    // Load more drinks when user reaches the bottom of the page\n    if (\n      window.innerHeight + document.documentElement.scrollTop ===\n      document.documentElement.offsetHeight\n    ) {\n      if (drinks.length < totalDrinks) {\n        setCurrentPage((prevPage) => prevPage + 1);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Drink drinks={drinks} />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,gBAAgB;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMa,aAAa,GAAG,EAAE;EACxB,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;;EAEzBb,SAAS,CAAC,MAAM;IACdc,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERd,SAAS,CAAC,MAAM;IACde,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEC,YAAY,CAAC;IAC/C,OAAO,MAAM;MACXF,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAED,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACT,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMK,MAAM,GAAG,CAACT,WAAW,GAAG,CAAC,IAAIE,aAAa;IAChDX,UAAU,CAACmB,MAAM,CAAC;MAAEC,KAAK,EAAET,aAAa;MAAEO;IAAO,CAAC,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAK;MACrE,MAAMC,SAAS,GAAGD,QAAQ,CAACf,MAAM;MACjCC,SAAS,CAAEgB,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAE,GAAGD,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC;EACJ,CAAC;;EAED,MAAMP,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA,IACEF,MAAM,CAACW,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACC,SAAS,KACvDF,QAAQ,CAACC,eAAe,CAACE,YAAY,EACrC;MACA,IAAItB,MAAM,CAACuB,MAAM,GAAGlB,WAAW,EAAE;QAC/BF,cAAc,CAAEqB,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;MAC5C;IACF;EACF,CAAC;EAED,oBACE3B,OAAA;IAAA4B,QAAA,gBACE5B,OAAA,CAACF,KAAK;MAACK,MAAM,EAAEA;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBhC,OAAA,CAACH,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA5CID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA8CT,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}